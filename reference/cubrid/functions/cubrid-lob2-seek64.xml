<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 648875cf73af01acdb6afaa5ca38b0bf6631bf42 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<refentry xml:id="function.cubrid-lob2-seek64" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_lob2_seek64</refname>
  <refpurpose>Move o cursor de um objeto LOB</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_lob2_seek64</methodname>
   <methodparam><type>resource</type><parameter>lob_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>origin</parameter><initializer>CUBRID_CURSOR_CURRENT</initializer></methodparam>
  </methodsynopsis>
  <para>
   A função <function>cubrid_lob2_seek64</function> é usada para mover a posição
   do cursor de um objeto LOB pelo valor definido no argumento <parameter>offset</parameter>,
   na direção definida no argumento <parameter>origin</parameter>.
   Se <parameter>offset</parameter> for maior que o máximo número inteiro,
   pode-se usar esta função.
  </para>
  <para>
   Para definir o argumento <parameter>origin</parameter>, pode-se usar <constant>CUBRID_CURSOR_FIRST</constant>
   para definir a posição do cursor avançando o número de unidades definidas por <parameter>offset</parameter>
   desde o primeiro início. Neste caso, <parameter>offset</parameter> precisa ser um valor positivo.
  </para>
  <para>
   Se for usado <constant>CUBRID_CURSOR_CURRENT</constant> para <parameter>origin</parameter>, pode-se
   avançar ou retroceder e <parameter>offset</parameter> pode ser positivo ou negativo.
  </para>
  <para>
   Se for usado <constant>CUBRID_CURSOR_LAST</constant> para <parameter>origin</parameter>, pode-se mover o número de
   unidades definido por <parameter>offset</parameter> para trás a partir do final do objeto LOB e <parameter>offset</parameter> pode ser somente positivo.
  </para>
  <note>
  <para>
   Se esta função for usada para mover a posição do cursor do objeto LOB, deve-se passar <parameter>offset</parameter> como uma string.
  </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
   <varlistentry>
    <term><parameter>lob_identifier</parameter></term>
    <listitem>
     <para>Identificador LOB como um resultado de <function>cubrid_lob2_new</function> ou obtido do conjunto de resultados.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>offset</parameter></term>
    <listitem>
     <para>Número de unidades para mover o cursor.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>origin</parameter></term>
    <listitem>
     <para>Este parâmetro pode ter as seguintes constantes como valores:</para>
     <para>CUBRID_CURSOR_FIRST: move para frente desde o primeiro início.</para>
     <para>CUBRID_CURSOR_CURRENT: move para frente ou para trás desde a posição atual.</para>
     <para>CUBRID_CURSOR_LAST: move para trás desde o final do objeto LOB.</para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>cubrid_lob2_seek64</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// test_lob (id INT, contents CLOB)
// Comprimento de dados de doc_1.txt deve ser maior que 20101029056306120215.

$conn = cubrid_connect("localhost", 33000, "demodb", "dba", "");

cubrid_execute($conn,"DROP TABLE if exists test_lob");
cubrid_execute($conn,"CREATE TABLE test_lob (id INT, contents CLOB)");

$req = cubrid_prepare($conn, "INSERT INTO test_lob VALUES (?, ?)");
cubrid_bind($req, 1, 1);

$lob = cubrid_lob2_new($conn, "clob");
cubrid_lob2_import($lob, "doc_1.txt");
cubrid_lob2_bind($req, 2, $lob, 'CLOB'); // ou cubrid_lob2_bind($req, 2, $lob);

cubrid_execute($req);

cubrid_lob2_close($lob);

$req = cubrid_execute($conn, "select * from test_lob");
$row = cubrid_fetch_row($req, CUBRID_LOB);
$lob = $row[1];

cubrid_lob2_seek64($lob, "20101029056306120215", CUBRID_CURSOR_FIRST);
$data = cubrid_lob2_read($lob, 20);
echo $data."\n";
cubrid_disconnect($conn);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_lob2_read</function></member>
    <member><function>cubrid_lob2_write</function></member>
    <member><function>cubrid_lob2_seek</function></member>
    <member><function>cubrid_lob2_tell</function></member>
    <member><function>cubrid_lob2_tell64</function></member>
    <member><function>cubrid_lob2_size</function></member>
    <member><function>cubrid_lob2_size64</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
