<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6fbb2db68cc01569ddb70a2c3fdaa8b532ec7beb Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<refentry xml:id="function.cubrid-fetch" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_fetch</refname>
  <refpurpose>Busca a próxima linha do conjunto de resultados</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>cubrid_fetch</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>CUBRID_BOTH</initializer></methodparam>
  </methodsynopsis>
  <para>
   A função <function>cubrid_fetch</function> é usada para obter uma única linha do resultado da consulta. O cursor é movido automaticamente para a linha seguinte após a obtenção do resultado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem><para><parameter>result</parameter> vem de uma chamada a <function>cubrid_execute</function></para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem><para>Tipo de array do resultado buscado: CUBRID_NUM, CUBRID_ASSOC,
      CUBRID_BOTH ou CUBRID_OBJECT. Se for necessário operar em um objeto LOB, pode-se
      usar CUBRID_LOB.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>Array de resultados ou objeto em caso de sucesso.</para>
  <para>&false;, quando não houver mais linhas; NULL em caso de falha.</para>
  <para>O resultado pode ser recebido como um array ou como um objeto e pode-se decidir que tipo de dados será usado configurando-se o parâmetro <parameter>type</parameter>. O parâmetro <parameter>type</parameter> pode ser definido para um dos seguintes valores:</para>
   <simplelist>
    <member>CUBRID_NUM : array numérico (iniciando em 0)</member>
    <member>CUBRID_ASSOC : array associativo</member>
    <member>CUBRID_BOTH : array numérico e associativo (padrão)</member>
    <member>CUBRID_OBJECT : objeto que tem o nome de atributo como o nome da coluna do resultado da consulta</member>
   </simplelist>
  <para>Quando o argumento <parameter>type</parameter> for omitido, o resultado será recebido usando a opção CUBRID_BOTH como padrão. Quando a intenção for receber o resultado como um objeto, o nome da coluna do resultado precisa seguir as regras de nomes de identificadores do PHP. Por exemplo, um nome de coluna "count(*)" não pode ser recebido como um objeto.</para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>cubrid_fetch</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$conn = cubrid_connect("localhost", 33000, "demodb");
$req = cubrid_execute($conn, "SELECT * FROM stadium WHERE nation_code='GRE' AND seats > 10000");

printf("%-40s %-10s %-9s %-20s\n", "nome", "área", "assentos", "endereço");
while ($row = cubrid_fetch($req)) {
    printf("%-40s %-10s %-9s %-20s\n",
        $row["name"], $row["area"], $row["seats"], $row["address"]);
}

// se for desejado operar em objeto LOB, pode-se usar cubrid_fetch($req, CUBRID_LOB)

cubrid_close_request($req);

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
nome                                     área       assentos  endereço
Panathinaiko Stadium                     86300.00   50000     Athens, Greece
Olympic Stadium                          54700.00   13000     Athens, Greece
Olympic Indoor Hall                      34100.00   18800     Athens, Greece
Olympic Hall                             52400.00   21000     Athens, Greece
Olympic Aquatic Centre                   42500.00   11500     Athens, Greece
Markopoulo Olympic Equestrian Centre     64000.00   15000     Markopoulo, Athens, Greece
Faliro Coastal Zone Olympic Complex      34650.00   12171     Faliro, Athens, Greece
Athens Olympic Stadium                   120400.00  71030     Maroussi, Athens, Greece
Ano Liossia                              34000.00   12000     Ano Liosia, Athens, Greece
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_execute</function></member>
    <member><function>cubrid_fetch_array</function></member>
    <member><function>cubrid_fetch_row</function></member>
    <member><function>cubrid_fetch_assoc</function></member>
    <member><function>cubrid_fetch_object</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
