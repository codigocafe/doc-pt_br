<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c08ec64aebb60e9d3163aa56711ccac9d2d0f05 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<refentry xml:id="function.cubrid-is-instance" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_is_instance</refname>
  <refpurpose>Verifica se a instância apontada pelo OID existe</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>cubrid_is_instance</methodname>
   <methodparam><type>resource</type><parameter>conn_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>oid</parameter></methodparam>
  </methodsynopsis>
  <para>
   A função <function>cubrid_is_instance</function> é usada para verificar
   se a instância apontada pelo <parameter>oid</parameter>
   existe ou não.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
  <variablelist>
    <varlistentry>
  <term><parameter>conn_identifier</parameter></term>
  <listitem><para>Identificador da conexão.</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>oid</parameter></term>
  <listitem><para>OID da instância que terá a existência verificada.</para></listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   1, se a instância existir;
  </para>
    <para>
   0, se a instância não existir;
  </para>
    <para>
   -1, em caso de erro.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>cubrid_is_instance</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$conn = cubrid_connect("localhost", 33000, "demodb");

$sql = <<<EOD
SELECT host_year, medal, game_date
FROM game
WHERE athlete_code IN
    (SELECT code FROM athlete WHERE name='Thorpe Ian');
EOD;

$req = cubrid_execute($conn, $sql, CUBRID_INCLUDE_OID);
$oid = cubrid_current_oid($req);

$res = cubrid_is_instance($conn, $oid);
if ($res == 1) {
    echo "Instância apontada por $oid existe.\n";
} else if ($res == 0){
    echo "Instância apontada por $oid não existe.\n";
} else {
    echo "erro\n";
}

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Instância apontada por @0|0|0 não existe.
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_drop</function></member>
    <member><function>cubrid_get_class_name</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
