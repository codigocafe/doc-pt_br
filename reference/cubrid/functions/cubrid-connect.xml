<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 648875cf73af01acdb6afaa5ca38b0bf6631bf42 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<refentry xml:id="function.cubrid-connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_connect</refname>
  <refpurpose>Abre uma conexão a um servidor CUBRID</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>cubrid_connect</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam><type>int</type><parameter>port</parameter></methodparam>
   <methodparam><type>string</type><parameter>dbname</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>userid</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>new_link</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   A função <function>cubrid_connect</function> é usada para estabelecer o
   ambiente para conexão ao servidor usando o endereço do servidor,
   número da porta, nome do banco de dados, nome de usuário e senha. Se o nome de usuário e
   a senha não forem informados, a conexão "PUBLIC" será realizada por
   padrão.
  </para>
 </refsect1>

  <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
   <varlistentry>
    <term><parameter>host</parameter></term>
    <listitem><para>Nome do host ou endereço IP do servidor CUBRID CAS.</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>port</parameter></term>
    <listitem><para>Número da porta do servidor CUBRID CAS (BROKER_PORT configurado em $CUBRID/conf/cubrid_broker.conf).</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>dbname</parameter></term>
    <listitem><para>Nome do banco de dados.</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>userid</parameter></term>
    <listitem><para>Nome de usuário do banco de dados. Se não for
     informado, o valor padrão será “público”.</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>passwd</parameter></term>
    <listitem><para>Senha do usuário. Se não for informado, o valor padrão será "".</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>new_link</parameter></term>
    <listitem><para>Se uma segunda chamada for feita a
     <function>cubrid_connect</function> com os mesmos argumentos, nenhuma nova
     conexão será estabelecida, mas em vez disso, o identificador da conexão
     já aberta será retornado. O parâmetro
     <parameter>new_link</parameter> modifica este comportamento e
     faz com que <function>cubrid_connect</function> sempre abra uma nova conexão,
     mesmo que <function>cubrid_connect</function> tenha sido chamada antes com
     os mesmos parâmetros.</para></listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Identificador da conexão em caso de sucesso,&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>cubrid_connect</function></title>
   <programlisting role="php">
<![CDATA[
<?php
printf("%-30s %s\n", "Versão do CUBRID PHP:", cubrid_version());

printf("\n");

$conn = cubrid_connect("localhost", 33000, "demodb", "dba");

if (!$conn) {
    die('Erro de conexão ('. cubrid_error_code() .')' . cubrid_error_msg());
}

$db_params = cubrid_get_db_parameter($conn);

while (list($param_name, $param_value) = each($db_params)) {
    printf("%-34s %s\n", $param_name, $param_value);
}

printf("\n");

$server_info = cubrid_get_server_info($conn);
$client_info = cubrid_get_client_info();

printf("%-34s %s\n", "Informação do Servidor:", $server_info);
printf("%-34s %s\n", "Informação do Cliente:", $client_info);

printf("\n");

$charset = cubrid_get_charset($conn);

printf("%-34s %s\n", "Conjunto de caracteres do CUBRID:", $charset);

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Versão do CUBRID PHP:              9.1.0.0001

PARAM_ISOLATION_LEVEL              3
LOCK_TIMEOUT                       -1
MAX_STRING_LENGTH                  1073741823
PARAM_AUTO_COMMIT                  1

Informação do Servidor:            9.1.0.0212
Informação do Cliente:             9.1.0

Conjunto de caracteres do CUBRID:  iso8859-1
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
   <member><function>cubrid_pconnect</function></member>
   <member><function>cubrid_connect_with_url</function></member>
   <member><function>cubrid_pconnect_with_url</function></member>
   <member><function>cubrid_disconnect</function></member>
   <member><function>cubrid_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
