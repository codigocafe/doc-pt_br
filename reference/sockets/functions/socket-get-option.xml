<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e58f2f64751dc0d9e0da953bac8003469f923af0 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.socket-get-option" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_get_option</refname>
  <refpurpose>Obtém opções para o soquete</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>int</type><type>false</type></type><methodname>socket_get_option</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>level</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
  </methodsynopsis>
  <para>
   A função <function>socket_get_option</function> recupera o valor para
   a opção especificado pelo parâmetro <parameter>option</parameter> para
   o soquete informado no parâmetro <parameter>socket</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Uma instância de <classname>Socket</classname> criada com <function>socket_create</function>
       ou <function>socket_accept</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>level</parameter></term>
     <listitem>
      <para>
       O parâmetro <parameter>level</parameter> especifica o nível de
       protocolo no qual a opção reside. Por exemplo, para recuperar opções no
       nível do soquete, um parâmetro <parameter>level</parameter> com valor
       <constant>SOL_SOCKET</constant> seria usado. Outros níveis, como
       <constant>TCP</constant>, podem ser usados
       especificando o número do protocolo para aquele nível. Números de protocolo podem ser
       encontrados usando a função <function>getprotobyname</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <table>
       <title>Opções de Soquete Disponíveis</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>Opção</entry>
          <entry>Descrição</entry>
          <entry>Tipo</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>SO_DEBUG</constant></entry>
          <entry>
           Reporta se a informação de depuração está sendo gravada.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_BROADCAST</constant></entry>
          <entry>
           Reporta se a transmissão de mensagens de difusão é suportada.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEADDR</constant></entry>
          <entry>
           Reporta se os endereços locais podem ser reutilizados.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEPORT</constant></entry>
          <entry>
           Reporta se as portas locais podem ser reutilizadas.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_KEEPALIVE</constant></entry>
          <entry>
           Reporta se as conexões são mantidas ativas com transmissão periódicas
           de mensagens. Se o soquete conectado falhar em responder a essas mensagens,
           a conexão é quebrada e os processos escrevendo nesse soquete são notificados
           com um sinal SIGPIPE.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_LINGER</constant></entry>
          <entry>
           <para>
            Informa se o soquete especificado em <parameter>socket</parameter> permanece em
            <function>socket_close</function> se houver dados presentes. Por padrão,
            quando o soquete é fechado, ele tenta enviar todos os dados não enviados.
            No caso de um soquete orientado a conexão,
            <function>socket_close</function> aguardará que seu par
            reconheça os dados.
           </para>
           <para>
            Se <varname>l_onoff</varname> for diferente de zero
            e <varname>l_linger</varname> for zero, todos os
            dados não enviados serão descartados e o RST (redefinição) será enviado ao
            par no caso de um soquete orientado a conexão.
           </para>
           <para>
            Por outro lado, se <varname>l_onoff</varname> for
            diferente de zero e <varname>l_linger</varname> for diferente de zero,
            <function>socket_close</function> irá bloquear até que todos os dados
            sejam enviados ou que tenha passado o tempo especificado em <varname>l_linger</varname>.
            Se o soquete for não bloqueante,
            <function>socket_close</function> falhará e retornará um erro.
           </para>
          </entry>
          <entry>
           <type>array</type>. O array conterá duas chaves:
           <varname>l_onoff</varname> e
           <varname>l_linger</varname>.
          </entry>
         </row>
         <row>
          <entry><constant>SO_OOBINLINE</constant></entry>
          <entry>
           Reporta se o <parameter>socket</parameter> mantém os dados fora-de-banda em linha.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDBUF</constant></entry>
          <entry>
           Reporta o tamanho do buffer de envio.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVBUF</constant></entry>
          <entry>
           Reporta o tamanho do buffer de recebimento.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_ERROR</constant></entry>
          <entry>
           Relata informações sobre o status do erro e o limpa.
          </entry>
          <entry>
           <type>int</type> (não pode ser definido por <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_TYPE</constant></entry>
          <entry>
           Reporta o tipo do <parameter>socket</parameter> (ex.:
           <constant>SOCK_STREAM</constant>).
          </entry>
          <entry>
           <type>int</type> (não pode ser definido por <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_DONTROUTE</constant></entry>
          <entry>
           Informa se as mensagens de saída ignoram os recursos de roteamento padrão.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVLOWAT</constant></entry>
          <entry>
           Informa o número mínimo de bytes a serem processados ​​para operações de
           entrada de <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVTIMEO</constant></entry>
          <entry>
           Informa o valor do tempo limite para operações de entrada.
          </entry>
          <entry>
           <type>array</type>. O array conterá duas chaves:
           <varname>sec</varname> que é a parte dos segundos no valor do tempo
           limite e <varname>usec</varname> que é a parte dos microssegundos
           do valor do tempo limite.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDTIMEO</constant></entry>
          <entry>
           Informa o valor do tempo limite especificando a quantidade de tempo que uma função
           de saída bloqueia porque o controle de fluxo impede o envio de dados.
          </entry>
          <entry>
           <type>array</type>. O array conterá duas chaves:
           <varname>sec</varname> que é a parte dos segundos no valor do tempo
           limite e <varname>usec</varname> que é a parte dos microssegundos
           do valor do tempo limite.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDLOWAT</constant></entry>
          <entry>
           Informa o número mínimo de bytes a serem processados ​​para operações de saída do <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_NODELAY</constant></entry>
          <entry>
           Informa se o algoritmo Nagle TCP está desabilitado.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_JOIN_GROUP</constant></entry>
          <entry>
           Ingressa em um grupo "multicast".
          </entry>
          <entry>
           <type>array</type> com chaves <literal>"group"</literal>, especificando
           uma <type>string</type> com um endereço "multicast" IPv4 ou IPv6 e
           <literal>"interface"</literal>, especificando um número de
           interface (tipo <type>int</type>) ou uma <literal>string</literal> com
           o nome da interface, como <literal>"eth0"</literal>.
           <literal>0</literal> pode ser especificado para indicar que a interface
           deve ser selecionada usando regras de roteamento. (só pode ser usada em
           <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_LEAVE_GROUP</constant></entry>
          <entry>
           Sai de um grupo "multicast".
          </entry>
          <entry>
           <type>array</type>. Veja <constant>MCAST_JOIN_GROUP</constant> para
           mais informação. (só pode ser usada em
           <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_BLOCK_SOURCE</constant></entry>
          <entry>
           Bloqueia pacotes que chegam de uma origem específica para um grupo
           "multicast" específico, no qual deve-se ter ingressado previamente.
          </entry>
          <entry>
           <type>array</type> com as mesmas chaves de
           <constant>MCAST_JOIN_GROUP</constant>, mais uma chave extra,
           <literal>source</literal>, que mapeia a uma <type>string</type>
           especificando um endereço IPv4 ou IPv6 da origem a ser bloqueada.
           (só pode ser usada em <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_UNBLOCK_SOURCE</constant></entry>
          <entry>
           Desbloqueia (volta a receber) pacotes que chegam de um endereço
           de origem específico para um grupo "multicast" específico, no qual deve-se
           ter ingressado previamente.
          </entry>
          <entry>
           <type>array</type> com o mesmo formato de
           <constant>MCAST_BLOCK_SOURCE</constant>.
           (só pode ser usada em <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_JOIN_SOURCE_GROUP</constant></entry>
          <entry>
           Recebe pacotes destinados a um grupo "multicast" específico cujo endereço
           de origem corresponde a um valor específico.
          </entry>
          <entry>
           <type>array</type> com o mesmo formato de
           <constant>MCAST_BLOCK_SOURCE</constant>.
           (só pode ser usada em <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_LEAVE_SOURCE_GROUP</constant></entry>
          <entry>
           Para de receber pacotes destinados a um grupo "multicast" específico cujo
           endereço de origem corresponde a um valor específico.
          </entry>
          <entry>
           <type>array</type> com o mesmo formato de
           <constant>MCAST_BLOCK_SOURCE</constant>.
           (só pode ser usada em <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_IF</constant></entry>
          <entry>
           A interface de saída para pacotes "multicast" IPv4.
          </entry>
          <entry>
           Pode ser um <type>int</type> especificando o número da interface ou uma
           <type>string</type> com um nome de interface, como
           <literal>eth0</literal>. O valor <type>0</type> pode ser usado para
           indicar a tabela de roteamento a ser usada na seleção da interface.
           A função <function>socket_get_option</function> retorna um
           índice de interface.
           Observe que, diferentemente da API C, esta opção NÃO utiliza um endereço
           IP. Isto elimina a diferença de interface entre
           <constant>IP_MULTICAST_IF</constant> e
           <constant>IPV6_MULTICAST_IF</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_IF</constant></entry>
          <entry>
           A interface de saída para pacotes "multicast" IPv6.
          </entry>
          <entry>
           O mesmo que <constant>IP_MULTICAST_IF</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_LOOP</constant></entry>
          <entry>
           A política de "loopback multicast" para pacotes IPv4 habilita ou desabilita
           o "loopback" de "multicasts" de saída, que devem ter sido previamente ingressados.
           O efeito difere, entretanto, se for aplicado em unixes ou Windows,
           o primeiro está no caminho de recepção enquanto o último está
           no caminho de envio.
          </entry>
          <entry>
           <type>int</type> (pode ser <literal>0</literal> ou
           <literal>1</literal>). Para <function>socket_set_option</function>,
           qualquer valor será aceito e será convertido para um booleano
           seguindo as regras normais do PHP.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_LOOP</constant></entry>
          <entry>
           Análoga a <constant>IP_MULTICAST_LOOP</constant>, porém para IPv6.
          </entry>
          <entry>
           <type>int</type>. Veja <constant>IP_MULTICAST_LOOP</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_TTL</constant></entry>
          <entry>
           O tempo de vida dos pacotes de saída IPv4 "multicast". Deve ser
           um valor entre 0 (não sair da interface) e 255. O padrão
           é 1 (apenas a rede local é alcançada).
          </entry>
          <entry>
           <type>int</type> entre 0 e 255.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_HOPS</constant></entry>
          <entry>
           Análoga a <constant>IP_MULTICAST_TTL</constant>, porém para pacotes
           IPv6. O valor -1 também é aceito e significa que a rota padrão
           deve ser usada.
          </entry>
          <entry>
           <type>int</type> entre -1 e 255.
          </entry>
         </row>
         <row>
          <entry><constant>SO_MARK</constant></entry>
          <entry>
           Define um identificador no soquete com o objetivo de filtrar
           pacotes no Linux.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_ACCEPTFILTER</constant></entry>
          <entry>
           Adicionar um filtro de aceitação no soquete sendo escutado (FreeBSD/NetBSD).
           Um módulo de kernel de filtro de aceitação precisa ser carregado antecipadamente
           no FreeBSD (ex.: accf_http).
          </entry>
          <entry>
           <type>string</type>. Nome do filtro (comprimento máximo de 15).
          </entry>
         </row>
         <row>
          <entry><constant>SO_USER_COOKIE</constant></entry>
          <entry>
           Define um identificador no soquete com o objetivo de filtrar
           pacotes no FreeBSD.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RTABLE</constant></entry>
          <entry>
           Define um identificador no soquete com o objetivo de filtrar
           pacotes no OpenBSD.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_DONTTRUNC</constant></entry>
          <entry>
           Retém dados não lidos.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_WANTMORE</constant></entry>
          <entry>
           Fornece uma dica de quando mais dados estão prontos.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_DEFER_ACCEPT</constant></entry>
          <entry>
           Não notifica um soquete que estiver escutando até que os dados estejam prontos.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_INCOMING_CPU</constant></entry>
          <entry>
           Obtém/define a afinidade de CPU de um soquete.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_MEMINFO</constant></entry>
          <entry>
           Obtém todas as informações de memória de um soquete.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_BPF_EXTENSIONS</constant></entry>
          <entry>
           Obtém as extensões BPF suportadas pelo kernel para anexar a um soquete.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_SETFIB</constant></entry>
          <entry>
           Define a tabela de rotas (FIB) de um soquete. (Somente FreeBSD)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SOL_FILTER</constant></entry>
          <entry>
           Filtros atribuídos a um soquete. (Somente Solaris/Illumos)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPCNT</constant></entry>
          <entry>
           Define o número máximo de sondas de manutenção de atividade que o TCP deve enviar antes de interromper a conexão.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPIDLE</constant></entry>
          <entry>
           Define o tempo que a conexão precisa permanecer ociosa.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPINTVL</constant></entry>
          <entry>
           Define o tempo entre sondagens de manutenção de atividade individuais.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPALIVE</constant></entry>
          <entry>
           Define o tempo que a conexão precisa permanecer ociosa. (somente macOS)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_NOTSENT_LOWAT</constant></entry>
          <entry>
           Define o número limite de dados não enviados na fila de escrita pelo fluxo de soquete. (somente Linux)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o valor da opção informada, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>socket_get_option</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = socket_create_listen(1223);

$linger = array('l_linger' => 1, 'l_onoff' => 1);
socket_set_option($socket, SOL_SOCKET, SO_LINGER, $linger);

var_dump(socket_get_option($socket, SOL_SOCKET, SO_REUSEADDR));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_create_listen</function></member>
    <member><function>socket_set_option</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
