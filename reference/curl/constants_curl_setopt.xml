 <variablelist role="constant_list"><!-- EN-Revision: b7d6aaa945219da933a0ac2a4b610aa1b09dfcb0 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
  <title><function>curl-setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Habilita o uso de um soquete de domínio Unix abstrato ao invés de
     estabelecer uma conexão TCP a um servidor e define o caminho para
     a <type>string</type> informada. Esta opção compatilha da mesma semântica
     de <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Estas duas opções
     compartilham o mesmo armazenamento e portanto somente uma delas pode ser definida
     por identificador.
     Disponível a partir do PHP 7.3.0 e cURL 7.53.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passa o nome do arquivo para o cURL usar como o arquivo de cache Alt-Svc para leitura de conteúdo de cache existente
     e possivelmente também gravar de volta após uma transferência, a menos que <constant>CURLALTSVC_READONLYFILE</constant>
     esteja definido <constant>CURLOPT_ALTSVC_CTRL</constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Popula a máscara de bits com o conjunto correto de recursos para instruir o cURL sobre como lidar com Alt-Svc para as
     transferências usando este identificador. cURL somente aceita cabeçalhos Alt-Svc através de HTTPS. Também irá completar
     uma requisição para uma origem alternativa se essa origem for apropriadamente servida através de HTTPS.
     Definir qualquer bit irá habilitar o motor alt-svc. As opções são:
     <constant>CURLALTSVC_H1</constant>,
     <constant>CURLALTSVC_H2</constant>,
     <constant>CURLALTSVC_H3</constant> e
     <constant>CURLALTSVC_READONLYFILE</constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para definir automaticamente o campo <literal>Referer:</literal> nas
     requisições onde ele segue um redirecionamento <literal>Location:</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fornece autenticação de assinatura AWS V4 em cabeçalho HTTP(S).
     Esta opção substitui qualquer outros tipos de autenticação que tenham sido definidos em
     <constant>CURLOPT_HTTPAUTH</constant>. Este método não pode ser combinado com outros tipos de autenticação.
     Disponível a partir do PHP 8.2.0 e cURL 7.75.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tamanho do buffer a ser usado para cada leitura. Entretanto, não há garantia
     de que esta requisição será cumprida.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo contendo um ou mais certificados com o qual
     o peer será verificado. Só faz sentido se usado em combinação com
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Pode requerer um caminho absoluto.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo PEM contendo um ou mais certificados com o qual
     o peer será verificado. Esta opção substitui a <constant>CURLOPT_CAINFO</constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um diretótio que mantém múltiplos certificados CA. Use esta opção
     junto com <constant>CURLOPT_SSL_VERIFYPEER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para enviar informação de certificação SSL para <constant>STDERR</constant>
     em transferências seguras. Adicionada no cURL 7.19.1.
     Requer <constant>CURLOPT_VERBOSE</constant> ligada para ter efeito.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de segundos a esperar durante tentativa de conexão. Use 0 para
     esperar indefinidamente.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de milissegundos a esperar durante tentativa de conexão. Use 0 para
     esperar indefinidamente.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Se libcurl tiver sido compilada para usar resolução de nome padrão do sistema, esta
     porção da conexão ainda usará a resolução de segundos inteiros para
     limites de tempo com um tempo mínimo permitido de um segundo. Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; informa à biblioteca para realizar toda a autenticação de proxy requerida
     e configuração de conexão, mas sem transferência de dados. Esta opção está implementada para
     HTTP, SMTP e POP3.
     Disponível a partir do cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Conecta a um servidor e porta específicos ao invés do servidor e porta da URL.
     Aceita um array de strings com o formato
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Disponível a partir do PHP 7.0.7 e cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O conteúdo do cabeçalho <literal>"Cookie: "</literal> a ser
     usado na requisição HTTP.
     Observe que cookies múltiplos são separados com um ponto-e-vírgula seguido de
     um espaço (ex.: "<literal>fruit=apple; colour=red</literal>")
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo contendo os dados do cookie. O arquivo de cookie pode ser
     no formato Netscape ou apenas cabeçalhos puros no estilo HTTP gravados em
     um arquivo.
     Se o nome for uma string vazia, nenhum cookie é carregado, porém
     o gerenciamento de cookies ainda estará habilitado.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo para gravar todos os cookies internos para quando o
     destrutor do identificador for chamado.
     <warning>
      <simpara>
       A partir do PHP 8.0.0, <function>curl_close</function> não tem função
       e <emphasis>NÃO</emphasis> destrói o identificador.
       Se for necessário gravar cookies antes do identificador ser destruido
       automaticamente, chame <function>unset</function> no identificador.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma string de cookie (isto é, uma linha única no formato Netscape/Mozilla ou um
     cabeçalho Set-Cookie no estilo HTTP) adiciona esse cookie único ao armazenamento interno de cookies.
     <literal>"ALL"</literal> apaga todos os cookies da memória.
     <literal>"SESS"</literal> apaga todos os cookies de sessão mantidos na memória.
     <literal>"FLUSH"</literal> grava todos os cookies conhecidos no arquivo especificado por <constant>CURLOPT_COOKIEJAR</constant>.
     <literal>"RELOAD"</literal> carrega todos os cookies dos arquivos especificados por <constant>CURLOPT_COOKIEFILE</constant>.
     Disponível a partir do cURL 7.14.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para marcar esta como uma nova "sessão" de cookie. Irá forçar a libcurl
     a ignorar todos os cookies que estiverem para ser carregados que sejam "cookies de sessão"
     da sessão anterior. Por padrão, a libcurl sempre guarda e
     carrega todos os cookies, independente se houver cookies de sessão ou não.
     Cookies de sessão são cookies sem data de expiração que devem
     existir apenas durante esta "sessão".
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para converter novas linhas Unix para novas linhas CRLF
     nas transferências.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um método de requisição customizado a ser usado no lugar de
     <literal>"GET"</literal> ou <literal>"HEAD"</literal> ao fazer
     uma requisição HTTP. Isto é útil para fazer
     <literal>"DELETE"</literal> ou outras requisições HTTP mais obscuras.
     Valores válidos são por exemplo <literal>"GET"</literal>,
     <literal>"POST"</literal>, <literal>"CONNECT"</literal> entre outros;
     Não insira aqui uma requisição HTTP inteira. Por exemplo,
     escrever <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
     estaria incorreto.
     <note>
      <para>
       Isto não deve ser feito sem primeiro garantir que o servidor suporta o método
       de requisição.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O protocolo padrão a usar se a URL não tem um nome de esquema.
     Disponível a partir do PHP 7.0.7 e cURL 7.45.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para não permitir URLs que incluem um nome de usuário. Nomes de usuário são permitidos por padrão (0).
     Disponível a partir do PHP 7.3.0 e cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de segundos para manter as entradas DNS na memória. Esta
     opção é definida para 120 (2 minutos) por padrão.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o nome da interface de rede à qual a resolução de DNS deve vincular.
     Precisa ser um nome de interface (não um endereço).
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o endereço IPv4 local ao qual a resolução DNS deve vincular. O argumento
     deve conter um único endereço numérico IPv4 no formato string.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o endereço IPv6 local ao qual a resolução DNS deve vincular. O argumento
     deve conter um único endereço numérico IPv6 no formato string.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para embaralhar a ordem de todos os endereços de retorno de forma que sejam usados
     em ordem aleatória, quando um nome é resolvido e mais de um endereço IP é retornado.
     Isso pode fazer com que IPv4 seja usado antes de IPv6 ou vice-versa.
     Disponível a partir do PHP 7.3.0 e cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar cache de DNS global. Esta opção não é segura para threads.
     É condicionalmente habilitada por padrão se o PHP for compilado sem uso de threads
     (CLI, FCGI, Apache2-Prefork, etc.).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verifica os campos de nome de certificado SSL do servidor de DNS-sobre-HTTPS, comparando com o nome do host.
     Disponível a partir do PHP 8.2.0 e cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verifica a autenticidade o certificado SSL do servidor de DNS-sobre-HTTPS.
     Disponível a partir do PHP 8.2.0 e cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Solicita ao cURL que verifique o status do certificado do servidor de DNS-sobre-HTTPS
     usando a extensão TLS "Certificate Status Request" (grampeamento OCSP).
     Disponível a partir do PHP 8.2.0 e cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fornece a URL do DNS-sobre-HTTPS.
     Disponível a partir do PHP 8.1.0 e cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Similar a <constant>CURLOPT_RANDOM_FILE</constant>, exceto por um nome de arquivo
     para um soquete "Entropy Gathering Daemon".
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O conteúdo do cabeçalho <literal>"Accept-Encoding: "</literal>.
     Isto habilita a decodificação da responsta. Codificações suportadas são
     <literal>"identity"</literal>, <literal>"deflate"</literal> e
     <literal>"gzip"</literal>. Se uma string vazia, <literal>""</literal>,
     for informada, é enviado um cabeçalho contendo todas os tipos de codificação.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O limite de tempo para respostas <literal>Expect: 100-continue</literal> em milissegundos.
     O padrão é 1000 milissegundos.
     Disponível a partir do PHP 7.0.7 e cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para falhar prolixamente se o código HTTP retornado
     for maior ou igual a 400. O comportamento padrão é retornar
     a página normalmente, ignorando o código.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O arquivo no qual a transferência deve ser gravada. O padrão
     é <constant>STDOUT</constant> (a janela do navegador).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para tentar buscar a data de modificação
     do documento remoto. Este valor pode ser buscado usando-se
     a opção <constant>CURLINFO_FILETIME</constant> com
     <function>curl_getinfo</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para seguir qualquer cabeçalho
     <literal>"Location: "</literal> que o servidor envia como
     parte do cabeçalho HTTP.
     Consulte também <constant>CURLOPT_MAXREDIRS</constant>.
     Esta constante não está disponível quando <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>
     está habilitada.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para força a conexão a ser fechada
     explicitamente ao terminar o processamento, e não ser enfileirada para reúso.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para forçar o uso de uma nova conexão
     ao invés de uma em cache.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para anexar ao arquivo remoto ao invés de
     sobrescrevê-lo.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um apelido para
     <constant>CURLOPT_TRANSFERTEXT</constant>. Use este último.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para apenas listar os nomes de um diretório
     FTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O valor que será usado para obter o endereço IP a ser usado
     para a instrução FTP "PORT". A instrução "PORT" solicita
     ao servidor remoto que se conecte ao endereço IP especificado. A
     string pode ser um endereço IP puro, um nome de servidor, um nome
     de interface de rede (no Unix), ou apenas um hífen '-' para usar o
     endereço IP padrão do sistema.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O método de autenticação FTP (quando ativado):
     <constant>CURLFTPAUTH_SSL</constant> (tentar SSL primeiro),
     <constant>CURLFTPAUTH_TLS</constant> (tentar TLS primeiro) ou
     <constant>CURLFTPAUTH_DEFAULT</constant> (deixar o cURL decidir).
     Disponível a partir do cURL 7.12.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para criar diretórios ausentes quando uma operação FTP
     encontrar um caminho que não existe atualmente.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Informa ao curl que método deve ser usado para alcançar um arquivo em um servidor FTP(S). Valores possíveis são
     <constant>CURLFTPMETHOD_DEFAULT</constant>,
     <constant>CURLFTPMETHOD_MULTICWD</constant>,
     <constant>CURLFTPMETHOD_NOCWD</constant> e
     <constant>CURLFTPMETHOD_SINGLECWD</constant>.
     Disponível a partir do cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar EPRT (e LPRT) ao realizar downloads
     FTP ativos. Use &false; para desabilitar EPRT e LPRT e usar PORT
     somente.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para primeiro tentar um comando EPSV para transferências
     FTP antes de reverter para PASV. Defina para &false;
     para desabilitar EPSV.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Tempo para o IPv6 começar à frente no algoritmo "happy eyeballs". Este algoritmo tenta
     a conexão simutânea a endereços IPv4 e IPv6 para servidores de pilha dupla,
     preferindo IPv6 primeiro pelo tempo especificado em milissegundos.
     O padrão é CURL_HET_DEFAULT, que atualmente é de 200 milissegundos.
     Disponível a partir do PHP 7.3.0 e cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para enviar um cabeçalho de protocolo HAProxy v1 no início da conexão.
     A ação padrão é não enviar este cabeçalho.
     Disponível a partir do PHP 7.3.0 e cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para incluir o cabeçalho na saída.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno que aceita dois parâmetros.
     O primeiro é o recurso cURL, o segundo é uma
     string com os dados de cabeçalho a serem escritos. Os dados de cabeçalho precisam
     ser escritos por esta função. Retorna o número de
     bytes escritos.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Valores possíveis são <constant>CURLHEADER_UNIFIED</constant> ou <constant>CURLHEADER_SEPARATE</constant>.
     O padrão é <constant>CURLHEADER_SEPARATE</constant> a partir do cURL
     7.42.1, e <constant>CURLHEADER_UNIFIED</constant> antes dessa versão.
     Disponível a partir do PHP 7.0.7 e cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Nome do arquivo de cache HSTS (HTTP Strict Transport Security).
     Disponível a partir do PHP 8.2.0 e cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Controla o comportamento HSTS (HTTP Strict Transport Security). Popula a máscara de bits com o conjunto correto de
     recursos para instruir o cURL sobre como lidar com HSTS para as transferências usando este identificador.
     <constant>CURLHSTS_ENABLE</constant> habilita o cache HSTS em memória. Se o arquivo de cache HSTS estiver definido,
     defina <constant>CURLHSTS_READONLYFILE</constant> para torná-lo somente-leitura.
     Disponível a partir do PHP 8.2.0 e cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Informa se respostas HTTP/0.9 são permitidas. O padrão é &false; a partir da libcurl 7.66.0;
     anteriormente o padrão era &true;.
     Disponível a partir do PHP 7.3.15 e 7.4.3, respectivamente, e cURL 7.64.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um array de respostas HTTP 200 que serão tratadas como respostas
     válidas e não como erros.
     Disponível a partir do cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Os métodos de autenticação HTTP a serem usados. As opções são:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_DIGEST</constant>,
     <constant>CURLAUTH_GSSNEGOTIATE</constant>,
     <constant>CURLAUTH_NTLM</constant>,
     <constant>CURLAUTH_AWS_SIGV4</constant>,
     <constant>CURLAUTH_ANY</constant> e
     <constant>CURLAUTH_ANYSAFE</constant>.
     O operador binário <literal>|</literal> (OU) pode ser usado para combinar
     mais de um método. Se isto for feito, o cURL irá consultar o servidor para ver
     que métodos ele suporta e escolherá o melhor.
     <constant>CURLAUTH_ANY</constant> liga todos os bits. O cURL selecionará automaticamente
     o que ele considerar o mais seguro.
     <constant>CURLAUTH_ANYSAFE</constant> liga todos os bits exceto o <constant>CURLAUTH_BASIC</constant>.
     O cURL selecionará automaticametne o que ele considerar o mais seguro.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para redefinir o método de requisição HTTP para GET.
     Como GET é o padrão, isto somente é necessário se o método
     de requisião tiver sido alterado.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um array de campos de cabeçalho HTTP a definir, no formato
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para encapsular através de um determinado proxy HTTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para obter o corpo de resposta HTTP bruto.
     Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURL_HTTP_VERSION_NONE</constant> (padrão, deixa o CURL
     decidir que versão usar),
     <constant>CURL_HTTP_VERSION_1_0</constant> (força HTTP/1.0),
     <constant>CURL_HTTP_VERSION_1_1</constant> (força HTTP/1.1),
     <constant>CURL_HTTP_VERSION_2_0</constant> (tenta HTTP 2),
     <constant>CURL_HTTP_VERSION_2</constant> (apelido para <constant>CURL_HTTP_VERSION_2_0</constant>),
     <constant>CURL_HTTP_VERSION_2TLS</constant> (tenta HTTP 2 sobre TLS (HTTPS) somente) ou
     <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (emite requisições HTTP não-TLS usando HTTP/2 sem HTTP/1.1 Upgrade).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O arquivo a ser lido pela transferência durante o envio.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tamanho esperado do arquivo, em bytes, ao enviá-lo a
     um servidor remoto. Observe que usar esta opção não impedirá que a libcurl
     envie mais dados, já que o que exatamente será enviado depende de
     <constant>CURLOPT_READFUNCTION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome da interface de rede de saída a ser usada. Isto pode ser um
     nome de interface, um endereço IP ou um nome de servidor.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Permite que uma aplicação selecione que tipo de endereço IP deve ser usado ao
     resolver nomes de servidor. Isto é interessante somente ao usar nomes de servidor
     resolvam endereços usando mais que uma versão de IP, valores possíveis são
     <constant>CURL_IPRESOLVE_WHATEVER</constant>,
     <constant>CURL_IPRESOLVE_V4</constant>,
     <constant>CURL_IPRESOLVE_V6</constant>, por padrão
     <constant>CURL_IPRESOLVE_WHATEVER</constant>.
     Disponível a partir do cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Certificado SSL do emissor a partir do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para continuar enviando o corpo da requisição se o código HTTP retornado for
     igual ou maior que 300. A ação padrão seria parar o envio
     e fechar o fluxo ou conexão. Adequado para autenticação NTLM manual.
     A maior parte das aplicações não precisa desta opção.
     Disponível a partir do PHP 7.3.0 e cURL 7.51.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha requerida para usar a chave privada <constant>CURLOPT_SSLKEY</constant>
     ou <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nível de segurança KRB4 (Kerberos 4). Qualquer dos valores a seguir é válido
     (na ordem do menos para o mais potente):
     <literal>"clear"</literal>,
     <literal>"safe"</literal>,
     <literal>"confidential"</literal>,
     <literal>"private".</literal>.
     Se a string não corresponder a uma dessas opções,
     <literal>"private"</literal> é usada. Definir esta opção para &null;
     irá desabilitar a segurança KRB4. Atualmente, a segurança KRB4 funciona somente
     com transações FTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pode ser usada para definir opções de login específicas do protocolo, tal como o
     mecanismos preferível de autenticação via "AUTH=NTLM" ou "AUTH=*",
     e deve ser usada em conjunto com a opção
     <constant>CURLOPT_USERNAME</constant> option.
     Disponível a partir do PHP 7.0.7 e cURL 7.34.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A velocidade de transferência, em bytes por segundo, em que a transferência deve ficar
     abaixo durante a contagem de <constant>CURLOPT_LOW_SPEED_TIME</constant>
     segundos antes que o PHP considere que a transferência está muito lenta e aborte.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de segundos que a velocidade de transferência deve estar abaixo de
     <constant>CURLOPT_LOW_SPEED_LIMIT</constant> antes que o PHP considere
     a transferência muito lenta e aborte.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.2.0 e cURL 7.69.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo máximo ocioso permitido para que uma conexão existente possa ser considerada para reúso.
     O tempo máximo padrão é de <literal>118</literal> segundos
     Disponível a partir do PHP 8.2.0 e cURL 7.65.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A quantidade máxima permitida de conexões persistentes.
     Quando o limite é atingido, a mais antiga no cache é fechada
     para evitar o aumento do número de conexões abertas.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tamanho máximo permitido para arquivo recebido. Se o arquivo requisitado for maior que este valor,
     a transferência não iniciará e <constant>CURLE_FILESIZE_EXCEEDED</constant> será retornada.
     O tamanho do arquivo nem sempre é conhecido antes da transferência, para esses casos esta opção não tem efeito mesmo que
     a transferência termine sendo maior que este limite informado.
     Disponível a partir do PHP 8.2.0 e cURL 7.11.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo máximo em segundos, desde a criação da conexão, permitido para que uma conexão
     existente possa ser considerada para reúso. Se uma conexão no cache for mais antiga
     que este valor, ela será fechada assim que as transferências em progresso terminem.
     O padrão é 0 segundo, o que significa que a opção está desabilitada e todas as conexões são elegíveis para reúso.
     Disponível a partir do PHP 8.2.0 e cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A quantidade máxima de redirecionamentos HTTP a seguir. Esta opção deve ser usada
     junto com <constant>CURLOPT_FOLLOWLOCATION</constant>.
     O valor padrão de <literal>20</literal> está definido para evitar redirecionamentos infinitos.
     Definir para <literal>-1</literal> permite redirecionamentos infinitos e <literal>0</literal>
     recusa todos os redirecionamentos.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se um recebimento exceder esta velocidade (medida em bytes por segundo) na
     média cumulativa durante a transferência, ela será pausada para
     manter a média abaixo ou igual ao valor do parâmetro.
     O padrão é velocidade ilimitada.
     Disponível a partir do cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se um envio exceder esta velocidade (medida em bytes por segundo) na
     média cumulativa durante a transferência, ela será pausada para
     manter a média abaixo ou igual ao valor do parâmetro.
     O padrão é velocidade ilimitada.
     Disponível a partir do cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.81.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para manter silêncio completo no que se refere
     às funções cURL.
     Removido a partir do cURL 7.15.5; use <constant xmlns="http://docbook.org/ns/docbook">CURLOPT_RETURNTRANSFER</constant> em seu lugar.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para ler o arquivo <filename>~/.netrc</filename>
     buscando usuário e senha para o servidor remoto com o qual
     a conexão está sendo estabelecida.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para excluir o corpo da saída.
     O método de requisição é definido para HEAD. Mudar para &false; não
     muda para GET.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para desabilitar a medição de progresso para transferências cURL.
     <note>
      <para>
       O PHP define automaticamente esta opção para &true;, ela só deve ser
       alterada para depuração.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para ignorar qualquer função cURL que faça com que um
     sinal seja enviado ao processo PHP. Ligado por padrão
     em SAPIs multi-thread para que opções de limite de tempo ainda possam ser usadas.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno que aceita três parâmetros.
     O primeiro é o recurso cURL, o segundo é uma
     string contendo um texto solicitando senha e o terceiro é o comprimento
     máximo da senha. Retorna a string contendo a senha.
     Removida a partir do PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha a ser usada na autenticação.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para não lidar com sequências de ponto-ponto (..).
     Disponível a partir do PHP 7.0.7 e cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define a chave pública fixada.
     A string pode ser o nome do arquivo da chave pública fixada. O formato
     esperado do arquivo é "PEM" ou "DER". A string também pode ser qualquer
     número de hashes sha256 codificadas em base 64 precedidas por "sha256//" e
     separadas por ";".
     Disponível a partir do PHP 7.0.7 e cURL 7.39.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para esperar por sequenciamento/multiplexação.
     Disponível a partir do PHP 7.0.7 e cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um número alternativo de porta para conexão.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para fazer um POST HTTP comum. Este POST é do
     tipo <literal>application/x-www-form-urlencoded</literal> normal,
     mais comumente usado por formulários HTML.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Os dados completos para enviar em uma operação "POST" HTTP.
     Este parâmetro pode ser
     passado como uma string codificada em URL como '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
     ou como um array com o nome do campo como chave e o dado do campo como valor.
     Se <parameter>value</parameter> for um array, o
     cabeçalho <literal>Content-Type</literal> será definido para
     <literal>multipart/form-data</literal>.
     Arquivos podem ser enviados usando <classname>CURLFile</classname> ou <classname>CURLStringFile</classname>,
     onde <parameter>value</parameter> precisa ser um array.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um array de comandos FTP a executar no servidor depois que a requisição
     FTP tenha sido realizada.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits de 1 (301 Movido Permanentemente), 2 (302 Encontrado)
     e 4 (303 Veja Outro) se o método POST HTTP deve ser mantido
     quando <constant>CURLOPT_FOLLOWLOCATION</constant> estiver definida e um
     tipo específico de redirecionamento ocorrer.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> contendo o nome do servidor ou endereço IP
     numérico com pontos a ser usado como o pré-proxy ao qual o curl se conecta antes
     de se conectar ao proxy HTTP(S) especificado na opção
     <constant>CURLOPT_PROXY</constant> para a próxima requisição.
     O pré-proxy somente pode ser um proxy SOCKS e deve ser prefixado com
     <literal>[esquema]://</literal> para especificar que tipo de socks é utilizado.
     Um endereço numérico IPv6 precisa ser escrito entre [colchetes].
     Definir o pré-proxy para uma string vazia desabilita explicitamente o uso de um pré-proxy.
     Para especificar o número da porta nesta string, adicione <literal>:[porta]</literal>
     ao final do nome do servidor. O número da porta do proxy opcionalmente pode ser
     especificado coma opção separada <constant>CURLOPT_PROXYPORT</constant>.
     O padrão é usar a porta 1080 para proxies se não for especificada.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Quaisquer dados que devem ser associados com este identificador cURL. Estes dados
     podem ser recuperados subsequentemente com a opção
     <constant>CURLINFO_PRIVATE</constant> de
     <function>curl_getinfo</function>. cURL não faz nada com estes dados.
     Ao usar um multi-identificador cURL, estes dados privados são tipicamente uma
     chave única para identificar um identificador cURL padrão.
     Disponível a partir do cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno que aceita cinco parâmetros.
     O primeiro é um recurso cURL, o segundo é o número total de
     bytes esperados no recebimento desta transferência, o terceiro é
     o número de bytes já recebidos, o quarto é o número
     total de bytes esperados no envio desta transferência e o
     quinto é o número de bytes já enviados.
     <note>
      <para>
       A função de retorno é chamada somente quando a opção <constant>CURLOPT_NOPROGRESS</constant>
       estiver definida para &false;.
      </para>
     </note>
     Retorne um valor não-zero para abortar a transferência. Neste caso, a
     transferência definirá um erro
     <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits de valores <constant>CURLPROTO_*</constant>. Se usada, esta máscara
     limita que protocolos a libcurl pode usar na transferência. Isto permite que se tenha
     uma libcurl construída para suportar uma ampla gama de protocolos mas ainda limitar transferências
     específicas para que possam usar somente um subconjunto deles. Por padrão, a libcurl irá
     aceitar todos os protocolos que ela suporta.
     Consulte também <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Opções válidas de protocolo são:
     <constant>CURLPROTO_HTTP</constant>,
     <constant>CURLPROTO_HTTPS</constant>,
     <constant>CURLPROTO_FTP</constant>,
     <constant>CURLPROTO_FTPS</constant>,
     <constant>CURLPROTO_SCP</constant>,
     <constant>CURLPROTO_SFTP</constant>,
     <constant>CURLPROTO_TELNET</constant>,
     <constant>CURLPROTO_LDAP</constant>,
     <constant>CURLPROTO_LDAPS</constant>,
     <constant>CURLPROTO_DICT</constant>,
     <constant>CURLPROTO_FILE</constant>,
     <constant>CURLPROTO_TFTP</constant>,
     <constant>CURLPROTO_MQTT</constant> e
     <constant>CURLPROTO_ALL</constant>.
     Disponível a partir do cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.85.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O proxy HTTP através do qual as requisições serão enviadas.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O(s) método(s) de autenticação para usar na conexão ao proxy.
     Use as mesmas máscaras de bits descritas em
     <constant>CURLOPT_HTTPAUTH</constant>. Para autenticação no proxy,
     somente <constant>CURLAUTH_BASIC</constant> e
     <constant>CURLAUTH_NTLM</constant> são suportadas atualmente.
     Disponível a partir do cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um array de cabeçalhos HTTP customizados para passar aos proxies.
     Disponível a partir do PHP 7.0.7 e cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número da porta do proxy para conexão. Este número de porta também
     pode ser definido em <constant>CURLOPT_PROXY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pode ser <constant>CURLPROXY_HTTP</constant> (padrão),
     <constant>CURLPROXY_SOCKS4</constant>,
     <constant>CURLPROXY_SOCKS5</constant>,
     <constant>CURLPROXY_SOCKS4A</constant> ou
     <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um nome de usuário e senha formatados como
     <literal>"[usuário]:[senha]"</literal> para usar na
     conexão ao proxy.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O caminho para o pacote de Certificados de Autoridade (CA) do proxy. Defina o caminho como uma
     <type>string</type> com o nome do arquivo que contém um ou mais certificados com os quais
     o prohy HTTPS será verificado.
     Esta opção é para conexão a um proxy HTTPS, não a um servidor HTTPS.
     O padrão é o caminho do sistema onde espera-se que o pacote de certificados da libcurl esteja
     armazanado.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo PEM contendo um ou mais certificados com os quais o proxy HTTPS será verificado.
     Esta opção é para conexão a um proxy HTTPS, não a um servidor HTTPS.
     O padrão é o caminho do sistema onde espera-se que o pacote de certificados da libcurl esteja
     armazanado.
     Disponível a partir do PHP 8.2.0 e cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O diretório que contém múltiplos certificados CA com os quais o proxy HTTPS será verificado.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o nome do arquivo com a concatenação de CRL (Lista de Revogação de Certificado)
     no formato PEM a ser usado na validação de certificado que ocorre durante
     a troca de informações SSL.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Nome do arquivo do certificado SSL do emissor do proxy.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Certificado SSL do emissor do proxy do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define a string a ser usada como a senha necessária para usar a
     chave privada <constant>CURLOPT_PROXY_SSLKEY</constant>. Nunca é necessária uma
     senha para carregar um certificado, mas será necessária uma para carregar a chave privada.
     Esta opção é para conexão a um proxy HTTPS, não a um servidor HTTPS.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define a chave pública fixada para o proxy HTTPS. A string pode ser o nome do arquivo
     da chave pública fixada. O formato de arquivo esperado é "PEM" ou "DER".
     A string também pode ser qualquer número de hashes sha256 codificados em base64 precedidos por
     "sha256//" e separados por ";".
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do serviço de autenticação de proxy.
     Disponível a partir do PHP 7.0.7, cURL 7.43.0 (para proxies HTTP) e cURL 7.49.0 (para proxies SOCKS5).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo do certificado de cliente usado para conectar-se ao proxy HTTPS.
     O formato padrão é "P12" no Transporte Seguro e "PEM" em outros mecanismos,
     e pode ser alterado com <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
     Com NSS ou Transporte Seguro, este também pode ser o apelido do certificado
     com o qual se deseja autenticar, conforme nomeado no banco de dados de segurança.
     Se for pretendido usar um arquivo do diretório atual, deve ser precedido por
     "./", para evitar confusão com um apelido.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O formato do certificado de cliente usado ao conectar-se a um proxy HTTPS.
     Os formatos suportados são "PEM" e "DER", exceto com Transporte Seguro.
     OpenSSL (versões 0.9.3 e posteriores) e Transporte Seguro
     (no iOS 5 ou posterior, ou OS X 10.7 ou posterior) também suportam "P12" para
     arquivos codificados em PKCS#12. O padrão é "PEM".
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Certificado de cliente proxy SSL do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo da sua chave privada usada para conexão com o proxy HTTPS.
     O formato padrão é "PEM" e pode ser alterado com
     <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
     (somente iOS e Mac OS X) Esta opção será ignorada se o curl tiver sido compilado com Transporte Seguro. Disponível se compilado com TLS habilitado.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O formato da chave privada. Os formatos suportados são "PEM", "DER" e "ENG".
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Chave privada para certificado de proxy do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma destas constantes:
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       É melhor não definir esta opção e deixar o padrão
       <constant>CURL_SSLVERSION_DEFAULT</constant>
       que tentará descobrir a versão do protocolo SSL remoto.
      </simpara>
     </warning>
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A lista de cifras a serem usadas para a conexão com o proxy HTTPS.
     A lista deve estar sintaticamente correta e consiste em uma ou mais strings
     de cifras separadas por dois pontos. Vírgulas ou espaços também são separadores aceitáveis,
     mas normalmente são usados ​​dois pontos. "!", "-" e "+" podem ser usados ​​como operadores.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define as opções de comportamento do proxy SSL, que é uma máscara de bits das seguintes constantes:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
     </simplelist>
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como <literal>2</literal> para verificar os campos de nome do certificado do proxy HTTPS em relação ao nome do proxy.
     Quando definido como <literal>0</literal> a conexão é bem-sucedida independentemente dos nomes usados ​​no certificado.
     Use essa capacidade com cuidado!
     <literal>1</literal> tratado como uma opção de depuração no curl 7.28.0 e versões anteriores.
     Do curl 7.28.1 a 7.65.3, <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> é retornado.
     Do curl 7.66.0 em diante, <literal>1</literal> e <literal>2</literal> são tratados como o mesmo valor.
     Em ambientes de produção o valor desta opção deve ser mantido em <literal>2</literal> (valor padrão).
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para impedir que o cURL verifique o certificado do par.
     Certificados alternativos para verificação podem ser
     especificados com a opção <constant>CURLOPT_CAINFO</constant>
     ou um diretório de certificado pode ser especificado com a
     opção <constant>CURLOPT_CAPATH</constant>.
     Quando definido para false, a verificação do certificado será sempre bem-sucedida. &true; é o padrão.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A lista de conjuntos de criptografia a serem usados ​​para a conexão TLS 1.3 com um proxy.
     A lista deve estar sintaticamente correta e consiste em uma ou mais
     sequências de conjuntos de cifras separadas por dois pontos. Esta opção é usada atualmente
     apenas quando curl é compilado para usar OpenSSL 1.1.1 ou posterior.
     Se um SSL diferente estiver sendo usado, pode-se tentar configurar
     conjuntos de criptografia TLS 1.3 usando a opção <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>. Disponível quando compilado com OpenSSL &gt;= 1.1.1.
     Disponível a partir do PHP 7.3.0 e cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha a ser usada para o método de autenticação TLS especificado com a
     opção <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requer que a
     opção <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> também esteja definida.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O método de autenticação TLS usado para a conexão HTTPS.
     O método suportado é <literal>"SRP"</literal>.
     <note>
      <para>
       A autenticação Secure Remote Password (SRP) para TLS fornece autenticação mútua
       se ambos os lados tiverem um segredo compartilhado. Para usar TLS-SRP, deve-se também definir as
       opções <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> e
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>.
      </para>
     </note>
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O usuário a ser usado para o método de autenticação TLS especificado com a
     opção <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requer que a
     opção <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> também esteja definida.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar o método PUT HTTP para um arquivo. O arquivo precisa ser
     definido com <constant>CURLOPT_INFILE</constant> e
     <constant>CURLOPT_INFILESIZE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um array de comandos FTP a executar no servidor antes da requisição
     FTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um nome de arquivo a ser usado para semear o gerador de números aleatórios para o SSL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Faixa(s) de dados a buscar no formato
     <literal>"X-Y"</literal> onde X ou Y são opcionais. Transferências HTTP
     também suportam vários intervalos, separados por vírgulas no formato
     <literal>"X-Y,N-M"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno que aceita três parâmetros.
     O primeiro é o recurso cURL, o segundo é um
     recurso de fluxo fornecido ao cURL através da opção
     <constant>CURLOPT_INFILE</constant> e o terceiro é a quantidade
     máxima de dados a serem lidos. A função deve retornar uma string
     com comprimento igual ou menor que a quantidade de dados solicitados,
     normalmente lendo-a do recurso de fluxo passado. Deve retornar
     uma string vazia para sinalizar <literal>EOF</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Máscara de bits de valores <constant>CURLPROTO_*</constant>. Se usada, esta máscara de bits
     limita quais protocolos a libcurl pode usar em uma transferência que segue em
     um redirecionamento quando <constant>CURLOPT_FOLLOWLOCATION</constant> está habilitado.
     Isso permite que se limite transferências específicas para usar apenas um subconjunto
     de protocolos em redirecionamentos. Por padrão, a libcurl permitirá todos os protocolos,
     exceto FILE e SCP. Esta é uma diferença em comparação com as versões anteriores à 7.19.4
     que seguiriam incondicionalmente todos os protocolos suportados.
     Veja também <constant>CURLOPT_PROTOCOLS</constant> para valores constantes de protocolo.
     Disponível a partir do cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O conteúdo do cabeçalho <literal>"Referer: "</literal> a ser usado
     em uma requisição HTTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 7.3.0 e cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fornece um endereço personalizado para um par específico de servidor e porta. Um array
     de strings de nome de servidor, porta e endereço IP, cada elemento separado por
     dois pontos. No formato:
     <code>
      array("example.com:80:127.0.0.1")
     </code>
     Disponível a partir do cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O deslocamento, em bytes, a partir do qual uma transferência deve ser retomada.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para retornar a transferência como uma string do
     valor de retorno de <function>curl_exec</function> em vez de enviá-la
     diretamente.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sempre &true;, o que desativa o suporte ao prefixo <literal>@</literal> para
     envio de arquivos em <constant>CURLOPT_POSTFIELDS</constant>, o que
     significa que valores começando com <literal>@</literal> podem ser passados ​
     ​com segurança como campos. <classname>CURLFile</classname> pode ser usada para
     envios.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A identidade de autorização (autzid) para a transferência. Aplicável apenas ao mecanismo de autenticação
     PLAIN SASL onde é opcional. Quando não especificada, apenas a identidade de autenticação
     (authcid) especificada pelo nome de usuário será enviada ao servidor, juntamente com a senha.
     O servidor derivará o authzid do authcid quando não for fornecido, que será usado internamente.
     Disponível a partir do PHP 8.2.0 e cURL 7.66.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar o envio da resposta inicial no primeiro pacote.
     Disponível a partir do PHP 7.0.7 e cURL 7.31.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do serviço de autenticação.
     Disponível a partir do PHP 7.0.7 e cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um resultado de <function>curl_share_init</function>. Faz com que o identificador
     cURL use os dados do identificador compartilhado.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Os métodos de autenticação SOCKS5 a serem utilizados. As opções são:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_GSSAPI</constant>,
     <constant>CURLAUTH_NONE</constant>.
     Um operador binário <literal>|</literal> (OU) pode ser usado para combinar
     mais de um método. Se isto for feito, o cURL irá interrogar o servidor para ver
     que métodos ele suporta, e escolherá o melhor.
     <constant>CURLAUTH_BASIC</constant> permite autenticação com usuário/senha.
     <constant>CURLAUTH_GSSAPI</constant> permite autenticação GSS-API.
     <constant>CURLAUTH_NONE</constant> permite que não haja autenticação.
     O padrão é <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Defina o usuário e senha reais com a opção <constant>CURLOPT_PROXYUSERPWD</constant>.
     Disponível a partir do PHP 7.3.0 e cURL 7.55.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits que consiste de uma ou mais das opções
     <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
     <constant>CURLSSH_AUTH_PASSWORD</constant>,
     <constant>CURLSSH_AUTH_HOST</constant> e
     <constant>CURLSSH_AUTH_KEYBOARD</constant>. Defina para
     <constant>CURLSSH_AUTH_ANY</constant> para deixar a libcurl escolher um.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar a compressão SSH interna. Isto é uma requisição, não uma ordem;
     o servidor poderá ou não fazê-lo.
     Disponível a partir do PHP 7.3.0 e cURL 7.56.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.84.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma string contendo 32 dígitos hexadecimais. A string deve ser a
     soma de verificação MD5 da chave pública do servidor remoto, e a libcurl rejeitará
     a conexão com o servidor, a menos que as somas correspondam.
     Esta opção é apenas para transferências SCP e SFTP.
     Disponível a partir do cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Hash SHA256 codificado em Base64 da chave pública do servidor remoto.
     A transferência falhará se o hash fornecido não corresponder ao hash fornecido pelo servidor remoto.
     Disponível a partir do PHP 8.2.0 e cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo da chave privada. Se não for usado, o padrão da libcurl é
     $HOME/.ssh/id_dsa se a variável de ambiente HOME estiver definida,
     e apenas "id_dsa" no diretório atual se HOME não estiver definida.
     Se o arquivo estiver protegido por senha, defina a senha com
     <constant>CURLOPT_KEYPASSWD</constant>.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo da chave pública. Se não for usado, o padrão da libcurl é
     $HOME/.ssh/id_dsa.pub se a variável de ambiente HOME estiver definida,
     e apenas "id_dsa.pub" no diretório atual se HOME não estiver definida.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo que contém um certificado no formato PEM.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha requerida para usar o certificado
     <constant>CURLOPT_SSLCERT</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O formato do certificado. Formatos suportados são
     <literal>"PEM"</literal> (default), <literal>"DER"</literal>
     e <literal>"ENG"</literal>.
     A partir do OpenSSL 0.9.3, <literal>"P12"</literal> (para arquivos codificados em PKCS#12)
     também é suportado.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Certificado de cliente SSL do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O identificador do mecanismo de criptografia da chave SSL privada
     especificada em <constant>CURLOPT_SSLKEY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O identificador do mecanismo de criptografia usado para operações de criptografia
     assimétricas.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo que contém uma chave SSL privada.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha secreta necessária para usar a chave SSL privada especificada em
     <constant>CURLOPT_SSLKEY</constant>.
     <note>
      <para>
       Como esta opção contém uma senha confidencial, lembre-se de manter
       seguro o script PHP que a contém.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tipo de chave da chave SSL privada especificada em
     <constant>CURLOPT_SSLKEY</constant>. Tipos de chave suportados são
     <literal>"PEM"</literal> (default), <literal>"DER"</literal>
     e <literal>"ENG"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Chave privada para certificado de cliente do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma das constantes:
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv2</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
     </simplelist>
     .
     A versão máxima do TLS pode ser definida usando uma das
     constantes
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>.
     Também é possível operação binária OR de uma das constantes
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>
     com uma das constantes
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>.

     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (a versão máxima suportada pela biblioteca)</member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       É melhor não definir esta opção e deixar no padrão,
       já que definir para
       <constant>CURL_SSLVERSION_SSLv2</constant>
       ou
       <constant>CURL_SSLVERSION_SSLv3</constant>
       é bastante perigoso, dadas as vulnerabilidades
       conhecidas no SSLv2 e no SSLv3.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma lista de cifras a serem usadas para SSL. Por exemplo,
     <literal>RC4-SHA</literal> e <literal>TLSv1</literal> são listas
     de cifras válidas.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma lista delimitada por dois pontos de algoritmos de curva elíptica. Por exemplo,
     <literal>X25519:P-521</literal> é uma lista válida de duas curvas elípticas.
     Esta opção define os algoritmos de troca de chaves do cliente na comunicação inicial do SSL,
     se o SSL com o qual o cURL foi compilado suportá-los.
     Disponível a partir do PHP 8.2.0 e cURL 7.73.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para desabilitar o ALPN na comunicação inicial do SSL (se o SSL com o qual
     a libcurl foi compilada suportá-lo), que pode ser usado para
     negociar HTTP2.
     Disponível a partir do PHP 7.0.7 e cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para desabilitar o NPN na comunicação inicial do SSL (se o SSL com o qual
     a libcurl foi compilada suportá-lo), que pode ser usado para
     negociar HTTP2.
     Disponível a partir do PHP 7.0.7 e cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar início falso do TLS.
     Disponível a partir do PHP 7.0.7 e cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define as opções de comportamento do SSL, que é uma máscara de bits das seguintes constantes:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_AUTO_CLIENT_CERT</constant></member>
      <member><constant>CURLSSLOPT_NATIVE_CA</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
      <member><constant>CURLSSLOPT_REVOKE_BEST_EFFORT</constant></member>
     </simplelist>
     Disponível a partir do PHP 7.0.7. e cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> para verificar que um campo "Common Name" ou um campo "Subject Alternate Name"
     no certificado SSL corresponde ao nome de servidor informado.
     <literal>0</literal> para não verificar os nomes.
     <literal>1</literal> não deve ser usado.
     Em ambientes de produção o valor para esta opção
     deve ser mantido em <literal>2</literal> (valor padrão). Suporte para o valor <literal>1</literal> foi removido no cURL 7.28.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para impedir o cURL de verificar o certificado
     do servidor. Certificados alternativos para verificar podem ser
     especificados com a opção <constant>CURLOPT_CAINFO</constant>
     ou um diretório de certificados pode ser especificado com a opção
     <constant>CURLOPT_CAPATH</constant>. &true; é o padrão a partir do cURL 7.10. Pacote padrão instalado a partir do
     cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para verificar o status do certificado.
     Disponível a partir do PHP 7.0.7 e cURL 7.41.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma localização alternativa para enviar os erros no lugar de
     <constant>STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o peso numérico do fluxo (um número entre 1 e 256).
     Disponível a partir do PHP 7.0.7 e cURL 7.46.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para suprimir cabeçalhos de resposta CONNECT do proxy a partir das funções de retorno de usuário
     <constant>CURLOPT_HEADERFUNCTION</constant> e <constant>CURLOPT_WRITEFUNCTION</constant>,
     quando <constant>CURLOPT_HTTPPROXYTUNNEL</constant> é usada e uma requisição CONNECT é realizada.
     Disponível a partir do PHP 7.3.0 e cURL 7.54.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar a extensão "Fast Open" (abertura rápida) do TCP.
     Disponível a partir do PHP 7.0.7 e cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se definida para <literal>1</literal>, sondas de manutenção de atividade serão enviadas. O atraso e a
     frequência destas sondas podem ser controlados pelas opções <constant>CURLOPT_TCP_KEEPIDLE</constant>
     e <constant>CURLOPT_TCP_KEEPINTVL</constant>, desde que o sistema operacional
     as suporte. Se definida para <literal>0</literal> (padrão), as sondas são desabilitadas.
     Disponível a partir do cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o atraso, em segundos, que o sistema operacional aguardará enquanto a conexão estiver
     ociosa antes de enviar sondas de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant> estiver
     habilitada. Nem todos os sistemas operacionais suportam esta opção.
     O padrão é <literal>60</literal>.
     Disponível a partir do cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o intervalo, em segundos, que o sistema operacional aguardará entre o envio
     de sondas de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant> estiver habilitada.
     Nem todos os sistemas operacionais suportam esta opção.
     O padrão é <literal>60</literal>.
     Disponível a partir do cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para desabilitar o algoritmo Nagle do TCP, que tenta minimizar
     o número de pacotes pequenos na rede.
     Disponível a partir do cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para não enviar requisições de opções TFTP.
     Disponível a partir do PHP 7.0.7 e cURL 7.48.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define como <constant>CURLOPT_TIMEVALUE</constant> é tratada.
     Use <constant>CURL_TIMECOND_IFMODSINCE</constant> para retornar a
     página somente se ela tenha sido modificada desde o momento especificado em
     <constant>CURLOPT_TIMEVALUE</constant>. Se ela não foi modificada,
     um cabeçalho <literal>"304 Not Modified"</literal> será retornado
     assumindo que <constant>CURLOPT_HEADER</constant> seja &true;.
     Use <constant>CURL_TIMECOND_IFUNMODSINCE</constant> para o efeito
     reverso. Use <constant>CURL_TIMECOND_NONE</constant> para ignorar
     <constant>CURLOPT_TIMEVALUE</constant> e sempre retornar a página.
     <constant>CURL_TIMECOND_NONE</constant> é o padrão. Antes do cURL 7.46.0, o padrão era
     <constant>CURL_TIMECOND_IFMODSINCE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número máximo de segundos para permitir a execução de funções cURL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número máximo de milissegundos para permitir a execução de funções
     cURL.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Se a libcurl for compilada para usar o resolvedor de nome padrão do sistema, essa
     parte da conexão ainda usará resolução de segundos completos para
     tempos limite com um mínimo permitido de um segundo.
     Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado
     por <constant>CURLOPT_TIMECONDITION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado
     por <constant>CURLOPT_TIMECONDITION</constant>. O padrão é zero.
     A diferença entre esta opção e <constant>CURLOPT_TIMEVALUE</constant>
     é o tipo do argumento. Em sistemas onde o inteiro longo é de somente 32 bits de comprimento,
     esta opção tem que ser usada para definir datas além do ano 2038.
     Disponível a partir do PHP 7.3.0 e cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A lista de conjuntos de criptografia a serem usados ​​para a conexão TLS 1.3. A lista deve estar
     sintaticamente correta e consiste em uma ou mais sequências de conjuntos de cifras separadas por dois pontos.
     Esta opção é usada atualmente apenas quando o cURL é compilado para usar OpenSSL 1.1.1 ou posterior.
     Se você estiver usando um SSL diferente, pode-se tentar configurar
     conjuntos de criptografia TLS 1.3 usando a opção <constant>CURLOPT_SSL_CIPHER_LIST</constant>. Disponível quando compilado com OpenSSL &gt;= 1.1.1.
     Disponível a partir do PHP 7.3.0 e cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar modo ASCII para transferências FTP.
     Para LDAP, os dados são recuperados em texto puro ao invés de HTML. Em
     sistemas Windows, <constant>STDOUT</constant> não será definido para modo
     binário.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Permite o uso de soquetes de domínio Unix como terminal de conexão e
     define o caminho para a <type>string</type> fornecida.
     Disponível a partir do PHP 7.0.7 e cURL 7.40.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para continuar enviando usuário e senha
     ao seguir localizações (usando
     <constant>CURLOPT_FOLLOWLOCATION</constant>), mesmo quando o
     nome do servidor tiver mudado.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Alguns protocolos possuem mecanismos de "manutenção da conexão". Esses mecanismos geralmente enviam algum tráfego
     nas conexões existentes para mantê-las ativas. Esta opção define o intervalo de manutenção da conexão.
     Atualmente, o único protocolo com mecanismo de manutenção de conexão é o HTTP/2. Quando o intervalo de manutenção
     da conexão é excedido, um quadro PING HTTP/2 é enviado na conexão.
     O padrão é <literal>60</literal> segundos.
     Disponível a partir do PHP 8.2.0 e cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para se preparar para um envio.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Tamanho de buffer preferido em bytes para o buffer de upload cURL.
     O tamanho do buffer de upload por padrão é de 64 kilobytes. O tamanho máximo do buffer que pode ser definido é de 2 megabytes.
     O tamanho mínimo do buffer que pode ser definido é de 16 kilobytes.
     Disponível a partir do PHP 8.2.0 e cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O URL a ser buscado. Isto também pode ser definido ao inicializar uma
     sessão com <function>curl_init</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O conteúdo do cabeçalho <literal>"User-Agent: "</literal> a ser
     usado em uma requisição HTTP.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de usuário a ser utilizado na autenticação.
     Disponível a partir do cURL 7.19.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um nome de usuário e senha formatados como
     <literal>"[usuário]:[senha]"</literal> a serem usados para a
     conexão.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para gerar informações detalhadas. Grava
     a saída em <constant>STDERR</constant> ou no arquivo especificado usando
     <constant>CURLOPT_STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno que aceita dois parâmetros.
     O primeiro é o recurso cURL e o segundo é uma
     string com os dados a serem gravados. Os dados devem ser salvos por
     esta função de retorno. Deve retornar o número exato de bytes gravados
     ou a transferência será abortada com erro.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O arquivo no qual a parte do cabeçalho da transferência é gravada.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.3.0 e cURL 7.86.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno que aceita dois parâmetros.
     Tem uma finalidade semelhante a <constant>CURLOPT_PROGRESSFUNCTION</constant> mas é mais moderna
     e é a opção preferida do cURL.
     Disponível a partir do PHP 8.2.0 e cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Especifica o token de acesso do OAuth 2.0.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
