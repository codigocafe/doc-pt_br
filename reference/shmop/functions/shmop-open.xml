<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f1446c725b05024034664159db4d5f34b56421d0 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.shmop-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>shmop_open</refname>
  <refpurpose>Cria ou abre um bloco de memória compartilhada</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Shmop</type><type>false</type></type><methodname>shmop_open</methodname>
   <methodparam><type>int</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam><type>int</type><parameter>permissions</parameter></methodparam>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>shmop_open</function> pode criar ou abrir um bloco de memória compartilhada.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       ID do sistema para o bloco de memória compartilhada.
       Pode ser passado como decimal ou hexadecimal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       As opções que podem ser usadas:
       <itemizedlist>
        <listitem>
         <simpara>
          "a" para acesso (define SHM_RDONLY para shmat).
          Usada para abrir um segmento de memória compartilhada
          existente para somente leitura.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          "c" para criação (define IPC_CREATE).
          Usada para criar um novo segmento de memória compartilhada
          ou, se um segmento com a mesma chave existir, para abri-lo para leitura
          e gravação.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          "w" para acesso de leitura e gravação.
          Usada para ler e escrever em um segmento de memória
          compartilhada. É usada na maioria dos casos.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          "n" para criar um novo segmento de memória (define IPC_CREATE|IPC_EXCL)
          Usada para criar um novo segmento de memória compartilhada,
          porém se existir um com a mesma chave, irá falhar. É útil
          para segurança, pois assim é possível evitar ataques de condição de
          corrida.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>permissions</parameter></term>
     <listitem>
      <para>
       As permissões a atribuir ao segmento de memória,
       as mesmas das permissões de um arquivo. As permissões precisam ser passadas
       em formato octal, como por exemplo <literal>0644</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       O tamanho do bloco de memória compartilhada a ser criado, em bytes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <para>
     Nota: o 3º e o 4º parâmetros devem ser informados como 0 se um segmento de memória
     existente estiver sendo aberto.
    </para>
   </note>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Em caso de sucesso, <function>shmop_open</function> retornará uma instância de <classname>Shmop</classname> que
   pode ser usada para acessar o segmento de memória compartilhada criado. &false; é
   retornado em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se <parameter>mode</parameter> for inválido ou <parameter>size</parameter> for menor ou igual a zero,
   um <classname>ValueError</classname> será lançado.
   Em outras falhas, <constant>E_WARNING</constant> será emitido.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Em caso de sucesso, esta função agora retorna uma instância de <classname>Shmop</classname>;
       anteriormente, retornava um <type>resource</type>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Se <parameter>mode</parameter> for inválido ou <parameter>size</parameter> for menor ou igual a zero,
       um <classname>ValueError</classname> é lançado; anteriormente, era emitido um <constant>E_WARNING</constant>
       e a função retornava &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Cria um novo bloco de memória compartilhada</title>
    <programlisting role="php">
<![CDATA[
<?php
$shm_key = ftok(__FILE__, 't');
$shm_id = shmop_open($shm_key, "c", 0644, 100);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Este exemplo abriu um bloco de memória compartilhada com um ID do sistema retornado por
   <function>ftok</function>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>shmop_close</function></member>
    <member><function>shmop_delete</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
