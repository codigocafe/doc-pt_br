<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45c190ae5d0af910b5146d174696e89be138b511 Maintainer: leonardolara Status: ready --><!-- CREDITS: fernandoc,felipe,leonardolara -->
<refentry xml:id="function.gmp-init" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>gmp_init</refname>
  <refpurpose>Cria um número GMP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>GMP</type><methodname>gmp_init</methodname>
   <methodparam><type class="union"><type>int</type><type>string</type></type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cria um número GMP a partir de um inteiro ou uma string.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>num</parameter></term>
     <listitem>
      <para>
       Um inteiro ou uma string. A string pode representar um decimal,
       hexadecimal ou octal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base</parameter></term>
     <listitem>
      <para>
       A base.
      </para>
      <para>
       A base pode varia de 2 a 36. Se a base for 0 (valor padrão), a
       base real é determinada pelos caracteres que vêm na frente. Se os dois
       primeiros caracteres forem <literal>0x</literal> ou <literal>0X</literal>,
       é assumido hexadecimal, se os dois primeiros caracteres forem <literal>0b</literal> ou <literal>0B</literal>,
       é assumido binário, se o primeiro caractere for <literal>0</literal>,
       é assumido octal, caso contrário é assumido decimal.
       Para bases até 36, é indiferente usar maiúsculas ou minúsculas, as letras terão o mesmo valor.
       Para bases de 37 a 62, letras maiúsculas representam a faixa usual de 10 a 35 enquanto que as minúsculas representam a faixa de 36 a 61.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &gmp.return;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Criando um número GMP</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = gmp_init (123456);
$b = gmp_init ("0xFFFFDEBACDFEDF7200");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Não é necessário chamar esta função para usar inteiros ou
    strings no lugar de números GMP nas funções GMP (como em
    <function>gmp_add</function>). Argumentos das funções são automaticamente
    convertidos para números GMP, se esta conversão for possível e necessária, usando
    as mesmas regras de <function>gmp_init</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>GMP::__construct</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
