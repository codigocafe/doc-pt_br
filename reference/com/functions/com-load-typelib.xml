<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b9043112d87ec0ca6db17276d7013acc2368ed33 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.com-load-typelib" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>com_load_typelib</refname>
  <refpurpose>Carrega uma biblioteca de tipos</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>com_load_typelib</methodname>
   <methodparam><type>string</type><parameter>typelib</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_insensitive</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Carrega uma biblioteca de tipos e registra suas constantes no mecanismo, como se
   fossem definidas usando <function>define</function>.
  </para>
  <para>
   Observe que é muito mais eficiente usar a configuração <link
   linkend="ini.com.typelib-file">com.typelib-file</link> do &php.ini; para pré-carregar e
   registrar as constantes, embora não seja tão flexível.
  </para>
  <para>
   Se <link linkend="ini.com.autoregister-typelib">com.autoregister-typelib</link> estiver ativado,
   o PHP tentará registrar automaticamente as constantes associadas a um
   objeto COM quando for instanciado. Isto depende das interfaces
   fornecidas pelo próprio objeto COM e nem sempre será possível.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>typelib</parameter></term>
     <listitem>
      <para>
       <parameter>typelib</parameter> pode ser um dos seguintes valores:
       <itemizedlist>
        <listitem>
         <para>
          O nome do arquivo <literal>.tlb</literal> ou o módulo executável
          que contém a biblioteca de tipos.
         </para>
        </listitem>
        <listitem>
         <para>
          O GUID da biblioteca de tipos, seguido pelo número da versão, por exemplo
          <literal>{00000200-0000-0010-8000-00AA006D2EA4},2,0</literal>.
         </para>
        </listitem>
        <listitem>
         <para>
          O nome da biblioteca de tipos, por ex. <literal>Microsoft OLE DB
          ActiveX Data Objects 1.0 Library</literal>.
         </para>
        </listitem>
       </itemizedlist>
       O PHP tentará resolver a biblioteca de tipos nesta ordem, pois o
       processo fica cada vez mais custoso à medida que se avança na lista;
       a pesquisa da biblioteca de tipos por nome é feita enumerando
       fisicamente o registro até que uma correspondência seja encontrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_insensitive</parameter></term>
     <listitem>
      <para>
       O parâmetro <parameter>case_insensitive</parameter> comporta-se de forma inversa ao
       parâmetro <literal>$case_insensitive</literal> na função
       <function>define</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
