<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: leonardolara Status: ready -->
<reference role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class.dotnet">
 <titleabbrev>dotnet</titleabbrev>
 <title>A classe dotnet</title>
 <partintro>

<!-- {{{ dotnet intro -->
  <section xml:id="dotnet.intro">
   &reftitle.intro;
   <para>
    A classe dotnet permite instanciar uma classe a partir de uma montagem .Net,
    chamar seus métodos e acessar suas propriedades, se a classe, os métodos e
    as propriedades estiverem <link xlink:href="&url.com.visible;">visíveis para o COM</link>.
   </para>
   <para>
    Não há suporte para instanciar classes estáticas nem chamar métodos estáticos.
    A instanciação de classes genéricas como <literal>System.Collections.Generic.List</literal>
    também não é suportada.
   </para>
   <para>
    Algumas classes .Net não implementam IDispatch, portanto, embora possam ser instanciadas,
    não há suporte para chamar métodos ou acessar propriedades nessas classes.
   </para>
   <note>
    <para>
     É necessário instalar o .Net Runtime no servidor web para utilizar
     esse recurso.
    </para>
   </note>
   <note>
    <para>
     Antes do PHP 8.0.0, o .Net Framework 4.0 e posteriores não eram suportados pela classe <classname>dotnet</classname>.
     Se os assemblies tivessem sido registrados com <command>regasm.exe</command>,
     as classes poderiam ser instanciadas como objetos <classname>com</classname>.
     A partir do PHP 8.0.0, o .Net Framework 4.0 e posteriores são suportados através da diretiva
     <link linkend="ini.com.dotnet-version">com.dotnet_version</link> do &php.ini;.
    </para>
   </note>
  </section>
<!-- }}} -->

  <section xml:id="dotnet.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <classname>dotnet</classname>
    </ooclass>

    <ooclass>
     <modifier>extends</modifier>
     <classname>variant</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.dotnet')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='dotnet'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="class.dotnet.overloadedmethods">
   <title>Métodos sobrecarregados</title>
   <para>
    O objeto retornado é um objeto sobrecarregado, o que significa que o PHP não
    vê nenhum método fixo como acontece com as classes normais; em vez disso, qualquer
    acesso a propriedade ou método é passado para o COM e de lá para o
    DOTNET. Em outras palavras, o objeto .Net é mapeado por meio da camada de
    interoperabilidade COM fornecida pelo .Net Runtime.
   </para>
   <para>
    Depois de criar um objeto dotnet, o PHP o trata de forma idêntica a qualquer
    outro objeto COM; todas as mesmas regras se aplicam.
   </para>
  </section>

  <section xml:id="class.dotnet.examples">
   <title>Exemplos de dotnet </title>
   <para>
    <example xml:id="example.dotnet">
     <title>Exemplo dotnet</title>
     <programlisting role="php">
<![CDATA[
<?php
$stack = new dotnet("mscorlib", "System.Collections.Stack");
$stack->Push(".Net");
$stack->Push("Olá ");
echo $stack->Pop() . $stack->Pop();
?>
]]>
     </programlisting>
    </example>
   </para>
  </section>

 </partintro>

 &reference.com.entities.dotnet;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
