<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d72f13eaf9e06715ae68eac72aa3fd6ae83eb78 Maintainer: leonardolara Status: ready -->
<!-- Generated by xml_proto.php v2.3. Found in /scripts directory of phpdoc. -->
<refentry xml:id="function.win32-start-service-ctrl-dispatcher" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>win32_start_service_ctrl_dispatcher</refname>
  <refpurpose>Registra o script no GCS, para que ele possa atuar como o serviço com o nome fornecido</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>win32_start_service_ctrl_dispatcher</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>gracefulMode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>

  <para>
   Quando iniciado através do Gerenciador de Controle de Serviço, um processo de serviço é
   necessário para "registrar-se" nele para estabelecer monitoramento de serviço
   e recursos de comunicação. Esta função realiza o registro gerando
   um thread para lidar com a comunicação de baixo nível com o Gerenciador de
   Controle de Serviço.
  </para>
  <para>
   Uma vez iniciado, o processo de serviço deve fazer duas coisas. A primeira é informar
   o Gerenciador de Controle de Serviço que o serviço está em execução. Isto é conseguido
   chamando <function>win32_set_service_status</function> com a
   constante <constant>WIN32_SERVICE_RUNNING</constant>. Se for necessário executar
   algum processo demorado antes que o serviço esteja realmente em execução, pode
   ser usada a constante <constant>WIN32_SERVICE_START_PENDING</constant>. A
   segunda é continuar a fazer registro com o Gerenciador de Controle de Serviço para que
   ele possa determinar se deve ser encerrado. Isso é conseguido chamando periodicamente
   a função <function>win32_get_last_control_message</function> e manipulando o
   código de retorno de forma adequada.
  </para>

  <caution>
   <para>
    Desde a versão 0.2.0, esta função funciona somente no SAPI CLI. Em outros SAPI,
    esta função é desabilitada.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       O nome abreviado do serviço, conforme registrado por
       <function>win32_create_service</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>gracefulMode</parameter></term>
     <listitem>
      <para>
       &true; para uma saída normal. &false; para saída com erro.
       Consulte <function>win32_set_service_exit_mode</function> para obter mais detalhes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
  <para>
   Antes da versão 1.0.0, &win32service.noerror.false.error;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Antes da versão 1.0.0, se o SAPI não for <literal>"cli"</literal>, esta função emite um
   erro de nível <constant>E_ERROR</constant>.
  </para>
  <para>
   A partir da versão, lança uma exceção
   <classname>Win32ServiceException</classname> se o SAPI não for
   <literal>"cli"</literal>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Lança uma exceção <classname>ValueError</classname> em caso de dados inválidos nos parâmetros,
        anteriormente retornava &false;.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Lança uma exceção <classname>Win32ServiceException</classname> em caso de erro,
        anteriormente um
        <link xmlns="http://docbook.org/ns/docbook" linkend="win32service.constants.errors">Código de Erro Win32</link>
        era retornado.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        O tipo de retorno agora é <type>void</type>, anteriormente era <type>mixed</type>.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.4.0</entry>
       <entry>
        O parâmetro <parameter>gracefulMode</parameter> foi adicionado.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.2.0</entry>
       <entry>
        Esta função funciona apenas no SAPI <literal>"cli"</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo de <function>win32_start_service_ctrl_dispatcher</function></title>
    <para>
     Verifica se o serviço está sendo executado no GCS.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (!win32_start_service_ctrl_dispatcher('dummyphp')) {
  die("Provavelmente não estou sendo executado no Gerenciador de Controle de Serviço");
}

win32_set_service_status(WIN32_SERVICE_START_PENDING);

// Algum processo demorado para colocar este serviço em funcionamento.

win32_set_service_status(WIN32_SERVICE_RUNNING);

while (WIN32_SERVICE_CONTROL_STOP != win32_get_last_control_message()) {
  # faça algum trabalho aqui, tentando não demorar mais do que cerca de 30 segundos
  # antes de voltar ao loop novamente
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>win32_set_service_status</function></member>
    <member><function>win32_get_last_control_message</function></member>
    <member><function>win32_set_service_exit_mode</function></member>
    <member><function>win32_set_service_exit_code</function></member>
    <member><link linkend="win32service.constants.errors">Códigos de Erro Win32</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
