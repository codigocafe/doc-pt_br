<?xml version="1.0" encoding="utf-8"?><!-- EN-Revision: 54571648dfd9acf775bf5490ad22a9c3fd5e1def Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="ds-set.map" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Ds\Set::map</refname>
  <refpurpose>Retorna o resultado da aplicação de um retorno de chamada a cada valor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Ds\Set</type><methodname>Ds\Set::map</methodname>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retorna o resultado da aplicação de uma função <parameter>callback</parameter> a
   cada valor no conjunto.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>callback</parameter></term>
    <listitem>
     <para>
      A função a ser aplicada a cada valor do conjunto deve ter a seguinte assinatura:
      <methodsynopsis xmlns="http://docbook.org/ns/docbook">
       <type>mixed</type>
       <methodname><replaceable>callback</replaceable></methodname>
       <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
      </methodsynopsis>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna uma nova instância de <classname>Ds\Set</classname> onde cada valor
   é o resultado da aplicação da função <parameter>callback</parameter> a cada valor
   do conjunto.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <methodname>Ds\Set::map</methodname></title>
   <programlisting role="php">
<![CDATA[
<?php
$set = new \Ds\Set([1, 2, 3]);

var_dump($set->map(function($value) { return $value * 2; }));
var_dump($set);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
object(Ds\Set)#3 (3) {
  [0]=>
  int(2)
  [1]=>
  int(4)
  [2]=>
  int(6)
}
object(Ds\Set)#1 (3) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  int(3)
}
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
