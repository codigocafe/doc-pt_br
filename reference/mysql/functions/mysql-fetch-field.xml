<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 65e697ff671608989432a6e6bf8ae8128b2be2c7 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.mysql-fetch-field" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_fetch_field</refname>
  <refpurpose>Obtém informações de coluna de um resultado e retorna como um objeto</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_fetch_field</function></member>
    <member><methodname>PDOStatement::getColumnMeta</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>mysql_fetch_field</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>field_offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retorna um objeto contendo informações sobre campo. Esta função pode ser usada
   para obter informações sobre campos no resultado de consulta informado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.result.description;
    <varlistentry>
     <term><parameter>field_offset</parameter></term>
     <listitem>
      <para>
       O índice numérico do campo. Se o índice não for especificado, o
       próximo campo que ainda não tenha sido obtido por esta função é recuperado.
       <parameter>field_offset</parameter> inicia em <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um <type>object</type> contendo informação sobre o campo. As propriedades
   do objeto são:
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      name - nome da coluna
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      table - a tabela à qual o objeto pertence, que é o nome do apelido se um estiver definido
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      max_length - comprimento máximo da coluna
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      not_null - 1 se a coluna não puder ser &null;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      primary_key - 1 se a coluna for uma chave primária
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      unique_key - 1 se a coluna for uma chave exclusiva
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      multiple_key - 1 se a coluna for uma chave não-exclusiva
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      numeric - 1 se a coluna for numérica
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      blob - 1 se a coluna for um BLOB
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      type - o tipo da coluna
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      unsigned - 1 se a coluna for sem sinal
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      zerofill - 1 se a coluna for prenchida com zero
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>mysql_fetch_field</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$conn) {
    die('Não foi possível conectar: ' . mysql_error());
}
mysql_select_db('database');
$result = mysql_query('select * from table');
if (!$result) {
    die('A consulta falhou: ' . mysql_error());
}
/* Obtém as informações da coluna */
$i = 0;
while ($i < mysql_num_fields($result)) {
    echo "Informação para a coluna $i:<br />\n";
    $meta = mysql_fetch_field($result, $i);
    if (!$meta) {
        echo "Sem informação disponível<br />\n";
    }
    echo "<pre>
blob:         $meta->blob
max_length:   $meta->max_length
multiple_key: $meta->multiple_key
name:         $meta->name
not_null:     $meta->not_null
numeric:      $meta->numeric
primary_key:  $meta->primary_key
table:        $meta->table
type:         $meta->type
unique_key:   $meta->unique_key
unsigned:     $meta->unsigned
zerofill:     $meta->zerofill
</pre>";
    $i++;
}
mysql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &database.field-case;
  <note>
   <para>
    Se campos ou nomes de tabelas forem apelidados na consulta SQL, o nome do apelido
    será retornado. O nome original pode ser recuperado, por exemplo, usando
    <methodname>mysqli_result::fetch_field</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_field_seek</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
