<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 16f66c05a4060a7d673ae1c70b656d65009407b0 Maintainer: ae Status: ready --><!-- CREDITS: narigone,ae,fabioluciano,leonardolara -->
 <sect1 xml:id="language.oop5.final" xmlns="http://docbook.org/ns/docbook">
  <title>final</title>
  <para>
   A palavra-chave final evita que classes filhas sobrescrevam um método, propriedade ou constante
   prefixando a definição com <literal>final</literal>. Se a própria
   classe estiver definida como final, ela não pode ser estendida.
  </para>
  <para>
   <example>
    <title>Exemplo de método final</title>
    <programlisting role="php">
<![CDATA[
<?php
class ClasseBase {
   public function teste() {
       echo "ClasseBase::teste() chamado\n";
   }

   final public function maisTeste() {
       echo "ClasseBase::maisTeste() chamado\n";
   }
}

class ClasseFilha extends ClasseBase {
   public function maisTeste() {
       echo "ClasseFilha::maisTeste() called\n";
   }
}
// Resulta em erro fatal: Não é possível substituir o método final ClasseBase::maisTeste()
?>
]]>
   </programlisting>
  </example>
  </para>
  <para>
   <example>
    <title>Exemplo de classe final</title>
    <programlisting role="php">
<![CDATA[
<?php
final class ClasseBase {
   public function teste() {
       echo "Método ClasseBase::teste() chamado\n";
   }

   // Como a classe já é final, a palavra-chave final é rendundante.
   final public function maisTeste() {
       echo "Método ClasseBase::maisTeste() chamado\n";
   }
}

class ClasseFilha extends ClasseBase {
}
// Resulta em erro fatal: Classe ClasseFilha não pode herdar da classe final (ClasseBase)
?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title>Exemplo de propriedade final a partir do PHP 8.4.0</title>
   <programlisting role="php">
<![CDATA[
<?php
class ClasseBase {
   final protected string $teste;
}

class ClasseFilha extends ClasseBase {
    public string $teste;
}
// Resulta em erro fatal: Não é possível substituir a propriedade final ClasseBase::$teste
?>
]]>
   </programlisting>
  </example>
  <example xml:id="language.oop5.final.example.php81">
   <title>Exemplo de constante final a partir do PHP 8.1.0</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    final public const X = "foo";
}

class Bar extends Foo
{
    public const X = "bar";
}

// Erro fatal: Bar::X não pode substituir a constante final Foo::X
?>
]]>
   </programlisting>
  </example>

  <note>
   <simpara>
    A partir do PHP 8.0.0, métodos privados não podem ser declarados finais, com exceção do <link linkend="language.oop5.decon.constructor">construtor</link>.
   </simpara>
  </note>
  <note>
   <simpara>
    Uma propriedade que é declarada <link linkend="language.oop5.visibility-members-aviz"><literal>private(set)</literal></link> é, implicitamente, <literal>final</literal>.
   </simpara>
  </note>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
